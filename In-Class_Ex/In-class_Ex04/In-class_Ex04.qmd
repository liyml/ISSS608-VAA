---
title: "In-Class Ex04"
format: html
editor: visual
date: "February 8, 2025"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

# In-Class Exercise 4

## Getting Start

------------------------------------------------------------------------

The code chunk below will be used load these R packages into RStudio environment.

```{r}
pacman::p_load(haven, SmartEDA, tidymodels,
               tidyverse)
```

## Data Import

------------------------------------------------------------------------

For the purpose of this In-Class Exercise, Exam_data.csv will be used.

In the code chunk below, read_csv () of reader packages is used to import Exam_data.csv into R and saved it into a tibble data.frame.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## Visualizing Distribution with Boxplot

------------------------------------------------------------------------

The boxplot below is plotted by using **ggplot**.

```{r}
ggplot(exam_data, 
       aes(x = ENGLISH,
           y = CLASS)) + 
  geom_boxplot()
```

## Plotting ridgeline graph: ggridges methods

------------------------------------------------------------------------

The ridgeline plot below is plotted by using **geom_density_ridges().**

```{r}
ggplot(exam, 
       aes(x = ENGLISH, 
           y = CLASS)) +
  geom_density_ridges(
    scale = 3,
    rel_min_height = 0.01,
    bandwidth = 3.4,
    fill = lighten("#7097BB", .3),
    color = "white" # constructing the ridges
  ) +
  scale_x_continuous(
    name = "English grades",
    expand = c(0, 0)
    ) +
  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +
  theme_ridges()
```

## Plotting a Half Eye graph with dot plots 

------------------------------------------------------------------------

```{r}
ggplot(exam_data, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 2)
```
